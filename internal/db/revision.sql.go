// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: revision.sql

package db

import (
	"context"
)

const createRevision = `-- name: CreateRevision :exec
INSERT INTO revision (revision_id, organization_id) VALUES ($1, $2)
`

type CreateRevisionParams struct {
	RevisionID     int64  `json:"revision_id"`
	OrganizationID *int64 `json:"organization_id"`
}

func (q *Queries) CreateRevision(ctx context.Context, arg CreateRevisionParams) error {
	_, err := q.db.Exec(ctx, createRevision, arg.RevisionID, arg.OrganizationID)
	return err
}

const getLastRevision = `-- name: GetLastRevision :one
SELECT
    revision_id
FROM revision
WHERE organization_id = $1
ORDER BY revision_id DESC
LIMIT 1
`

func (q *Queries) GetLastRevision(ctx context.Context, organizationID *int64) (int64, error) {
	row := q.db.QueryRow(ctx, getLastRevision, organizationID)
	var revision_id int64
	err := row.Scan(&revision_id)
	return revision_id, err
}
